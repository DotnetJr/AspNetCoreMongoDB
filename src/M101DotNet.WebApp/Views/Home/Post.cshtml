@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = Model.Post.Title;
}

<h2>@ViewData["Title"]</h2>

<hr />

<div class="container">
    <div class="form-group">
        <label class="col-md-2 control-label">Author</label>
        <div class="col-md-10">
            <p class="form-control-static">@Model.Post.Author</p>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Date</label>
        <div class="col-md-10">
            <p class="form-control-static">@Model.Post.CreatedAtUtc</p>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Content</label>
        <div class="col-md-10">
            <p class="form-control-static">@Model.Post.Content</p>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Tags</label>
        <div class="col-md-10">
            @foreach (var tag in Model.Post.Tags)
            {
                <p class="form-control-static"><a href="@Url.Action("Posts", "Home", new { tag = tag })">@tag</a></p>
            }
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Comments</label>
        <div class="col-md-10">
            @foreach (var comment in Model.Post.Comments)
            {
                <blockquote>
                    <p>@comment.Content</p>
                    <footer>@comment.CreatedAtUtc by <cite title="Source Title">@comment.Author</cite></footer>
                </blockquote>
            }
        </div>
    </div>
</div>

<hr />

@if (SignInManager.IsSignedIn(User))
{
    <form asp-controller="Home" asp-action="NewComment" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
        <h4>Add Comment</h4>
        <input type="hidden" name="PostId" value="@Model.Post.Id" />
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            <label class="col-md-2 control-label">Content</label>
            <div class="col-md-10">
                <textarea class="form-control" rows="3" data-val="true" data-val-required="The Content field is required." id="Content" name="Content"></textarea>
                <span class="text-danger field-validation-valid" data-valmsg-for="Content" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Submit</button>
            </div>
        </div>
    </form>

    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
}